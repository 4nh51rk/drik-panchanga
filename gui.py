#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Tue Jan 22 15:06:05 2013

import wx
import json

from time import strptime
from pytz import timezone, utc
from datetime import *
from panchanga import *

# begin wxGlade: extracode
# end wxGlade


class Panchanga(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Panchanga.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.dateTxt = wx.TextCtrl(self, -1, "23/01/2013")
        self.computeBtn = wx.Button(self, -1, "Compute")
        self.placeTxt = wx.TextCtrl(self, -1, "Bangalore")
        self.searchBtn = wx.Button(self, -1, "Search")
        self.latTxt = wx.TextCtrl(self, -1, "12.97194", style=wx.TE_PROCESS_TAB)
        self.lonTxt = wx.TextCtrl(self, -1, "77.59369", style=wx.TE_PROCESS_TAB)
        self.tzTxt = wx.TextCtrl(self, -1, "+5.5")
        self.masaTxt = wx.StaticText(self, -1, u"Puṣya  ")
        self.tithiTxt = wx.StaticText(self, -1, u"Śukla pakṣa dvādaṣī   ")
        self.tithiTimeTxt = wx.StaticText(self, -1, "28:43:28")
        self.nakTxt = wx.StaticText(self, -1, u"Rohiṇī")
        self.nakTimeTxt = wx.StaticText(self, -1, "06:57:56")
        self.yogaTxt = wx.StaticText(self, -1, "Brahma")
        self.yogaTimeTxt = wx.StaticText(self, -1, "08:32:02")
        self.karanaTxt = wx.StaticText(self, -1, "Bhava")
        self.karanaTimeTxt = wx.StaticText(self, -1, "15:27:47")
        self.varaTxt = wx.StaticText(self, -1, u"Budhavāra  ")
        self.sakaTxt = wx.StaticText(self, -1, u"Śaka 1934 ")
        self.kaliTxt = wx.StaticText(self, -1, "Kali 5113")
        self.aharTxt = wx.StaticText(self, -1, "1867850")
        self.sunriseTxt = wx.StaticText(self, -1, "06:47:38")
        self.sunsetTxt = wx.StaticText(self, -1, "18:15:31")
        self.sizer_1_staticbox = wx.StaticBox(self, -1, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT_ENTER, self.calculate_panchanga, self.dateTxt)
        self.Bind(wx.EVT_BUTTON, self.calculate_panchanga, self.computeBtn)
        self.Bind(wx.EVT_TEXT_ENTER, self.search_location, self.placeTxt)
        self.Bind(wx.EVT_BUTTON, self.search_location, self.searchBtn)
        self.Bind(wx.EVT_TEXT_ENTER, self.update_place, self.latTxt)
        self.Bind(wx.EVT_TEXT, self.update_place, self.latTxt)
        self.Bind(wx.EVT_TEXT_ENTER, self.update_place, self.lonTxt)
        self.Bind(wx.EVT_TEXT, self.update_place, self.lonTxt)
        self.Bind(wx.EVT_TEXT_ENTER, self.update_place, self.tzTxt)
        self.Bind(wx.EVT_TEXT, self.update_place, self.tzTxt)
        # end wxGlade
        self.init_location_db()

    def __set_properties(self):
        # begin wxGlade: Panchanga.__set_properties
        self.SetTitle("Hindu Panchanga")
        self.SetSize((550, 488))
        self.SetToolTipString("Can also be entered as: 77d 35' 37\"")
        self.dateTxt.SetToolTipString("Enter date and click \"Compute\". Negative years are treated as per proleptic Gregorian calendar.")
        self.dateTxt.SetFocus()
        self.placeTxt.SetToolTipString("If the search fails, enter Latitude, Longitude and Time zone directly below and click \"Compute\". Enter ASCII names only.")
        self.searchBtn.SetForegroundColour(wx.Colour(44, 44, 44))
        self.latTxt.SetToolTipString("Can also be entered as: 12d 58' 19\"")
        self.tzTxt.SetToolTipString("In hours. Positive values are east of UTC and negative, west of UTC.")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: Panchanga.__do_layout
        self.sizer_1_staticbox.Lower()
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.HORIZONTAL)
        grid_sizer_1 = wx.GridSizer(17, 3, 0, 0)
        label_1 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_1, 0, 0, 0)
        label_2 = wx.StaticText(self, -1, u"Hindu Dṛg-gaṇita Pañcāṅga ")
        label_2.SetMinSize((319, 24))
        label_2.SetFont(wx.Font(15, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        grid_sizer_1.Add(label_2, 0, wx.BOTTOM | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        label_4 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_4, 0, 0, 0)
        label_3 = wx.StaticText(self, -1, "Date (DD/MM/YYYY)")
        grid_sizer_1.Add(label_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.dateTxt, 0, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.computeBtn, 0, 0, 0)
        label_6 = wx.StaticText(self, -1, "Place")
        grid_sizer_1.Add(label_6, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.placeTxt, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.searchBtn, 0, 0, 0)
        label_31 = wx.StaticText(self, -1, "Latitude")
        grid_sizer_1.Add(label_31, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        label_32 = wx.StaticText(self, -1, "Longitude")
        grid_sizer_1.Add(label_32, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        label_33 = wx.StaticText(self, -1, "Time zone")
        grid_sizer_1.Add(label_33, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.latTxt, 0, wx.RIGHT | wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.lonTxt, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.tzTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        static_line_1 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_1, 0, wx.EXPAND, 0)
        static_line_2 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_2, 0, wx.EXPAND, 0)
        static_line_3 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_3, 0, wx.EXPAND, 0)
        label_8 = wx.StaticText(self, -1, u"Māsa ")
        grid_sizer_1.Add(label_8, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.masaTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_9 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_9, 0, 0, 0)
        label_7 = wx.StaticText(self, -1, "Tithi")
        grid_sizer_1.Add(label_7, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.tithiTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.tithiTimeTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_13 = wx.StaticText(self, -1, u"Nakṣatra  ")
        grid_sizer_1.Add(label_13, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.nakTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.nakTimeTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_16 = wx.StaticText(self, -1, "Yoga")
        grid_sizer_1.Add(label_16, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.yogaTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.yogaTimeTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_19 = wx.StaticText(self, -1, u"Karaṇa  ")
        grid_sizer_1.Add(label_19, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.karanaTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.karanaTimeTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_22 = wx.StaticText(self, -1, u"Vāra  ")
        grid_sizer_1.Add(label_22, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.varaTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_24 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_24, 0, 0, 0)
        label_25 = wx.StaticText(self, -1, "Elapsed Year")
        grid_sizer_1.Add(label_25, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.sakaTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.kaliTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_28 = wx.StaticText(self, -1, "Kali Day")
        grid_sizer_1.Add(label_28, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.aharTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_30 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_30, 0, 0, 0)
        static_line_4 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_4, 0, wx.EXPAND, 0)
        static_line_5 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_5, 0, wx.EXPAND, 0)
        static_line_6 = wx.StaticLine(self, -1)
        grid_sizer_1.Add(static_line_6, 0, wx.EXPAND, 0)
        label_34 = wx.StaticText(self, -1, "Sunrise")
        grid_sizer_1.Add(label_34, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        label_36 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_36, 0, 0, 0)
        grid_sizer_1.Add(self.sunriseTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        label_37 = wx.StaticText(self, -1, "Sunset")
        grid_sizer_1.Add(label_37, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        label_38 = wx.StaticText(self, -1, "")
        grid_sizer_1.Add(label_38, 0, 0, 0)
        grid_sizer_1.Add(self.sunsetTxt, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(grid_sizer_1, 1, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def calculate_panchanga(self, event):  # wxGlade: Panchanga.<event_handler>
        date = self.parse_date()
        self.update_place(event)
        place = self.place

        event.Skip()

    def search_location(self, event):  # wxGlade: Panchanga.<event_handler>
        city = self.placeTxt.Value.title()  # Convert to title-case
        if self.cities.has_key(city):
            self.searchBtn.SetForegroundColour(wx.Colour(0x2C, 0x2C, 0x2C))
            self.searchBtn.SetLabel("Found!")

            date = self.parse_date()
            city = self.cities[city]
            lat = city['latitude']
            lon = city['longitude']
            tzname = city['timezone']
            # checking at 5 AM local (DST changes generally happen before 3 AM local time)
            local_time = timezone(tzname).localize(datetime(date.year, date.month, date.day, 5, 0, 0))
            # compute offset from UTC (in hours)
            tz_offset = datetime.utcoffset(local_time).total_seconds() / 3600.
            self.place = Place(lat, lon, tz_offset)

            # update coordinate textboxes
            self.latTxt.SetValue("%.5f" % lat)
            self.lonTxt.SetValue("%.5f" % lon)
            self.tzTxt.SetValue("%+.2f" % tz_offset)
        else:
            self.searchBtn.SetForegroundColour(wx.Colour(0xFF, 0x00, 0x00))  # Red = FF0000
            self.searchBtn.SetLabel("Not found!")
        event.Skip()

    def parse_date(self):
        date = self.dateTxt.Value
        try:
            dt = strptime(date, "%d/%m/%Y")
            date = Date(dt.tm_year, dt.tm_mon, dt.tm_mday)
        except ValueError:
            # Probably the user entered negative year, strptime can't handle it.
            day, month, year = map(int, date.split('/'))
            date = Date(year, month, day)
        return date

    def init_location_db(self):
        fp = open("cities.json")
        self.cities = json.load(fp)
        fp.close()

    def update_place(self, event):  # wxGlade: Panchanga.<event_handler>
        lat = float(self.latTxt.Value)
        lon = float(self.lonTxt.Value)
        tz = float(self.tzTxt.Value)
        self.place = Place(lat, lon, tz)
        event.Skip()

# end of class Panchanga
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = Panchanga(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
